[OK]
[WARNING] 1
 1:
 position: [10] tcp_client_scenario.send_receive_sequence.RECEIVE
 message: not same as expected message. value is different.
  expected_message entity="response2_entity"
  difference_member_list=
    member1_int8: expected=0x02 <=> actual=0xFF
    member2_int16: expected=0x2222 <=> actual=0xFFFF
    member3_int32: expected=0x33333333 <=> actual=0xFFFFFFFF
    member4_char: expected="1" <=> actual="Z"
[LOGS]
->scenario[tcp_client_scenario]
  position: [1] tcp_client_scenario
->  sequence[send_receive_sequence]
    position: [2] tcp_client_scenario.send_receive_sequence
->    command[SET_VARIABLE]
      position: [3] tcp_client_scenario.send_receive_sequence.SET_VARIABLE
        command set variable: exec=":COUNTER = 0"
        command set variable: exec=":INCREMENT = 1"
<-    command[SET_VARIABLE]
->    command[OPEN]
      position: [4] tcp_client_scenario.send_receive_sequence.OPEN
        command open: name="TCPクライアント", ip="127.0.0.1", port="50000"
<-    command[OPEN]
->    command[SET_VARIABLE]
      position: [5] tcp_client_scenario.send_receive_sequence.SET_VARIABLE
        command set variable: exec=":COUNTER += :INCREMENT"
<-    command[SET_VARIABLE]
->    command[SEND]
      position: [6] tcp_client_scenario.send_receive_sequence.SEND
        command send: name="command_entity", message="010100020000000334"
        command send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
<-    command[SEND]
->    command[RECEIVE]
      position: [7] tcp_client_scenario.send_receive_sequence.RECEIVE
        receive: format="response_format", message="81FFFFFFFFFFFFFF5A"
        receive: member_list=
          id: 0x81
          member1_int8: 0xFF
          member2_int16: 0xFFFF
          member3_int32: 0xFFFFFFFF
          member4_char: "Z"
        same as expected message.
          expected_message type="formats"
          expected_message name="response_format"
          actual_message format="response_format"
<-    command[RECEIVE]
->    command[SET_VARIABLE]
      position: [8] tcp_client_scenario.send_receive_sequence.SET_VARIABLE
        command set variable: exec=":COUNTER += :INCREMENT"
<-    command[SET_VARIABLE]
->    command[SEND]
      position: [9] tcp_client_scenario.send_receive_sequence.SEND
        command send: name="command_entity", message="010200020000000334"
        command send: member_list=
          id: 0x01
          member1_int8: 0x02
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
<-    command[SEND]
->    command[RECEIVE]
      position: [10] tcp_client_scenario.send_receive_sequence.RECEIVE
        receive: format="response_format", message="81FFFFFFFFFFFFFF5A"
        receive: member_list=
          id: 0x81
          member1_int8: 0xFF
          member2_int16: 0xFFFF
          member3_int32: 0xFFFFFFFF
          member4_char: "Z"
        not same as expected message. value is different.
          expected_message entity="response2_entity"
          difference_member_list=
            member1_int8: expected=0x02 <=> actual=0xFF
            member2_int16: expected=0x2222 <=> actual=0xFFFF
            member3_int32: expected=0x33333333 <=> actual=0xFFFFFFFF
            member4_char: expected="1" <=> actual="Z"
<-    command[RECEIVE]
->    command[CLOSE]
      position: [11] tcp_client_scenario.send_receive_sequence.CLOSE
        command close: name="TCPクライアント", ip="127.0.0.1", port="50000"
<-    command[CLOSE]
<-  sequence[send_receive_sequence]
->  sequence[interval_send_sequence]
    position: [12] tcp_client_scenario.interval_send_sequence
->    command[AUTOPILOT_START]
      position: [13] tcp_client_scenario.interval_send_sequence.AUTOPILOT_START
        autopilot start: name="interval_send_autopilot"
<-    command[AUTOPILOT_START]
->    command[OPEN]
      position: [14] tcp_client_scenario.interval_send_sequence.OPEN
        command open: name="TCPクライアント", ip="127.0.0.1", port="50000"
<-    command[OPEN]
->    command[WAIT]
      position: [15] tcp_client_scenario.interval_send_sequence.WAIT
        command wait: time="20"
        [IntervalSend] send: name="command_entity", message="010100020000000334"
        [IntervalSend] send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
        receive: format="response_format", message="81FFFFFFFFFFFFFF5A"
        receive: member_list=
          id: 0x81
          member1_int8: 0xFF
          member2_int16: 0xFFFF
          member3_int32: 0xFFFFFFFF
          member4_char: "Z"
        [IntervalSend] send: name="command_entity", message="010100020000000334"
        [IntervalSend] send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
        receive: format="response_format", message="81FFFFFFFFFFFFFF5A"
        receive: member_list=
          id: 0x81
          member1_int8: 0xFF
          member2_int16: 0xFFFF
          member3_int32: 0xFFFFFFFF
          member4_char: "Z"
        [IntervalSend] send: name="command_entity", message="010100020000000334"
        [IntervalSend] send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
        receive: format="response_format", message="81FFFFFFFFFFFFFF5A"
        receive: member_list=
          id: 0x81
          member1_int8: 0xFF
          member2_int16: 0xFFFF
          member3_int32: 0xFFFFFFFF
          member4_char: "Z"
        [IntervalSend] send: name="command_entity", message="010100020000000334"
        [IntervalSend] send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
        receive: format="response_format", message="81FFFFFFFFFFFFFF5A"
        receive: member_list=
          id: 0x81
          member1_int8: 0xFF
          member2_int16: 0xFFFF
          member3_int32: 0xFFFFFFFF
          member4_char: "Z"
<-    command[WAIT]
->    command[CLOSE]
      position: [16] tcp_client_scenario.interval_send_sequence.CLOSE
        command close: name="TCPクライアント", ip="127.0.0.1", port="50000"
<-    command[CLOSE]
->    command[AUTOPILOT_END]
      position: [17] tcp_client_scenario.interval_send_sequence.AUTOPILOT_END
        autopilot stop: name="interval_send_autopilot"
<-    command[AUTOPILOT_END]
<-  sequence[interval_send_sequence]
<-scenario[tcp_client_scenario]