[OK]
[LOGS]
->scenario[tcp_client_scenario]
  position: tcp_client_scenario
->  sequence[send_receive_sequence]
    position: tcp_client_scenario.send_receive_sequence
->    command[SET_VARIABLE]
      position: tcp_client_scenario.send_receive_sequence.SET_VARIABLE
        command set variable: exec=":STRUCT_LENGTH += 0x01"
<-    command[SET_VARIABLE]
->    command[OPEN]
      position: tcp_client_scenario.send_receive_sequence.OPEN
        command open: name="TCPクライアント", ip="127.0.0.1", port="50000"
<-    command[OPEN]
->    command[SET_VARIABLE]
      position: tcp_client_scenario.send_receive_sequence.SET_VARIABLE
        command set variable: exec=":COUNTER += :STRUCT_LENGTH"
<-    command[SET_VARIABLE]
->    command[SEND]
      position: tcp_client_scenario.send_receive_sequence.SEND
        command send: name="command_entity", message="010100020000000334"
        command send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
<-    command[SEND]
->    command[RECEIVE]
      position: tcp_client_scenario.send_receive_sequence.RECEIVE
        expected type="formats"
        expected name="response_format"
        receive: name="response_format", message="81FFFFFFFFFFFFFF5A"
        command receive: format name="response_format"
        command receive: member_list=
          id: 0x81
          member1_int8: 0xFF
          member2_int16: 0xFFFF
          member3_int32: 0xFFFFFFFF
          member4_char: "Z"
<-    command[RECEIVE]
->    command[CLOSE]
      position: tcp_client_scenario.send_receive_sequence.CLOSE
        command close: name="TCPクライアント", ip="127.0.0.1", port="50000"
<-    command[CLOSE]
<-  sequence[send_receive_sequence]
->  sequence[interval_send_sequence]
    position: tcp_client_scenario.interval_send_sequence
->    command[AUTOPILOT_START]
      position: tcp_client_scenario.interval_send_sequence.AUTOPILOT_START
        autopilot start: name="interval_send_autopilot"
<-    command[AUTOPILOT_START]
->    command[OPEN]
      position: tcp_client_scenario.interval_send_sequence.OPEN
        command open: name="TCPクライアント", ip="127.0.0.1", port="50000"
<-    command[OPEN]
->    command[WAIT]
      position: tcp_client_scenario.interval_send_sequence.WAIT
        command wait: time="20"
        interval send: name="command_entity", message="010100020000000334"
        interval send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
        receive: name="response_format", message="81FFFFFFFFFFFFFF5A"
        interval send: name="command_entity", message="010100020000000334"
        interval send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
        receive: name="response_format", message="81FFFFFFFFFFFFFF5A"
        interval send: name="command_entity", message="010100020000000334"
        interval send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
        receive: name="response_format", message="81FFFFFFFFFFFFFF5A"
        interval send: name="command_entity", message="010100020000000334"
        interval send: member_list=
          id: 0x01
          member1_int8: 0x01
          member2_int16: 0x0002
          member3_int32: 0x00000003
          member4_char: "4"
        receive: name="response_format", message="81FFFFFFFFFFFFFF5A"
<-    command[WAIT]
->    command[CLOSE]
      position: tcp_client_scenario.interval_send_sequence.CLOSE
        command close: name="TCPクライアント", ip="127.0.0.1", port="50000"
<-    command[CLOSE]
->    command[AUTOPILOT_END]
      position: tcp_client_scenario.interval_send_sequence.AUTOPILOT_END
        autopilot stop: name="interval_send_autopilot"
<-    command[AUTOPILOT_END]
<-  sequence[interval_send_sequence]
<-scenario[tcp_client_scenario]